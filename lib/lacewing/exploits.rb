require 'lacewing'

module Lacewing
  class Exploits

    def self.lfi
      puts 'LFI: Local File Inclusion'.bold.green
      puts Lacewing::PROMPT + 'Here are a few articles on how to test LFI:'
      places = ['https://www.owasp.org/index.php/Testing_for_Local_File_Inclusion', 'https://www.offensive-security.com/metasploit-unleashed/file-inclusion-vulnerabilities/']
      places.each { |i| puts "\t#{i}"}

      puts Lacewing::PROMPT + 'Here are some common payloads:'
      payloads = %w[../../../../etc/passwd ../../../../etc/shadow ../../../../var/mail/root]
      payloads.each { |i| puts "\t#{i}" }
    end

    def self.rce
      puts 'RCE: Remote Code Execution'.bold.green
      puts Lacewing::PROMPT + 'There\'s a lot of different kinds of RCE, so here are some examples:'
      examples = %w[https://thehackernews.com/2018/04/windows-patch-updates.html https://www.symantec.com/security_response/vulnerability.jsp?bid=102375 https://en.wikipedia.org/wiki/EternalBlue]
      examples.each { |i| puts "\t#{i}" }

      puts Lacewing::PROMPT + 'Here are some tools to use:'
      tools = ['Metasploit Framework - metasploit.com', 'Golismero - golismero-project.com/']
      tools.each { |i| puts "\t#{i}"}
    end

    def self.xss
      puts 'XSS: Cross-Site Scripting'.bold.green
      xss_types = ['Reflected - Specially crafted input returned back to user', 'Stored - Permanent Injection', 'DOM-based - XSS artifact as an HTML DOM']
      type = $prompt.select('There are different kinds of XSS attacks. Which one do you want?', xss_types)
      case type
        when xss_types[0]
          ref = ['https://www.owasp.org/index.php/Testing_for_Reflected_Cross_site_scripting_(OWASP-DV-001)',
                 'https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet',
                 'https://security.stackexchange.com/questions/65142/what-is-reflected-xss']
          puts Lacewing::PROMPT + 'Here are some references to Reflected XSS:'
          ref.each { |i| puts "\t#{i}" }
        when xss_types[1]
      end
    end

  end
end
